import { Test } from 'nodeunit';
declare const _default: {
    'check that instantiation works'(test: Test): void;
    'can create a cluster with a single instance'(test: Test): void;
    'can create a cluster with imported vpc and security group'(test: Test): void;
    'cluster with parameter group'(test: Test): void;
    'creates a secret when master credentials are not specified'(test: Test): void;
    'create an encrypted cluster with custom KMS key'(test: Test): void;
    'cluster with instance parameter group'(test: Test): void;
    'create a cluster using a specific version of MySQL'(test: Test): void;
    'create a cluster using a specific version of Postgresql'(test: Test): void;
    'cluster exposes different read and write endpoints'(test: Test): void;
    'imported cluster with imported security group honors allowAllOutbound'(test: Test): void;
    'cluster with enabled monitoring'(test: Test): void;
    'create a cluster with imported monitoring role'(test: Test): void;
    'throws when trying to add rotation to a cluster without secret'(test: Test): void;
    'throws when trying to add single user rotation multiple times'(test: Test): void;
    'create a cluster with s3 import role'(test: Test): void;
    'create a cluster with s3 import buckets'(test: Test): void;
    'create a cluster with s3 export role'(test: Test): void;
    'create a cluster with s3 export buckets'(test: Test): void;
    'create a cluster with s3 import and export buckets'(test: Test): void;
    'create a cluster with s3 import and export buckets and custom parameter group'(test: Test): void;
    'PostgreSQL cluster with s3 export buckets does not generate custom parameter group'(test: Test): void;
    'throws when s3ExportRole and s3ExportBuckets properties are both specified'(test: Test): void;
    'throws when s3ImportRole and s3ImportBuckets properties are both specified'(test: Test): void;
    'does not throw (but adds a node error) if a (dummy) VPC does not have sufficient subnets'(test: Test): void;
};
export = _default;
