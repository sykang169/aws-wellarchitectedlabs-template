import { Test } from 'nodeunit';
declare const _default: {
    'create a DB instance'(test: Test): void;
    'instance with option and parameter group'(test: Test): void;
    'create an instance from snapshot'(test: Test): void;
    'throws when trying to generate a new password from snapshot without username'(test: Test): void;
    'throws when specifying user name without asking to generate a new password'(test: Test): void;
    'throws when password and generate password ar both specified'(test: Test): void;
    'create a read replica in the same region - with the subnet group name'(test: Test): void;
    'on event'(test: Test): void;
    'on event without target'(test: Test): void;
    'can use metricCPUUtilization'(test: Test): void;
    'can resolve endpoint port and socket address'(test: Test): void;
    'can deactivate backup'(test: Test): void;
    'imported instance with imported security group with allowAllOutbound set to false'(test: Test): void;
    'create an instance with imported monitoring role'(test: Test): void;
    'create an instance with an existing security group'(test: Test): void;
    'throws when trying to add rotation to an instance without secret'(test: Test): void;
    'throws when trying to add single user rotation multiple times'(test: Test): void;
    'throws when timezone is set for non-sqlserver database engine'(test: Test): void;
    'create an instance from snapshot with maximum allocated storage'(test: Test): void;
    'create a DB instance with maximum allocated storage'(test: Test): void;
};
export = _default;
